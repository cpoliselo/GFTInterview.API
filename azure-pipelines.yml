# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: TerraformInstaller@0
  displayName: Terraform Install
  inputs:
    terraformVersion: 'latest'
- task: TerraformCLI@0
  displayName: Terraform Init
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/tf'
    backendType: 'selfConfigured'
    allowTelemetryCollection: true
    
- task: TerraformCLI@0
  displayName: Terraform Import App
  inputs:
    command: 'import'
    workingDirectory: '$(System.DefaultWorkingDirectory)/tf'
    commandOptions: 'aws_elastic_beanstalk_application.application AppTesteItau2'
    allowTelemetryCollection: true
    
- task: TerraformCLI@0
  displayName: Terraform Import Env
  inputs:
    command: 'import'
    workingDirectory: '$(System.DefaultWorkingDirectory)/tf'
    commandOptions: 'aws_elastic_beanstalk_environment.environment e-f5kmb3buv7'
    allowTelemetryCollection: true
    

- task: TerraformCLI@0
  displayName: Terraform Import S3
  inputs:
    command: 'import'
    workingDirectory: '$(System.DefaultWorkingDirectory)/tf'
    commandOptions: 'aws_s3_bucket.bucketitau testeitau'
    allowTelemetryCollection: true
- task: TerraformCLI@0
  displayName: Terraform Plan
  inputs:
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/tf'
    backendType: 'selfConfigured'
    allowTelemetryCollection: true    

- task: TerraformCLI@0
  displayName: Terraform Apply
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/tf'
    backendType: 'selfConfigured'
    allowTelemetryCollection: true 
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: Restore Nuget
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: Build Project
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'


- task: BeanstalkDeployApplication@1
  displayName: Deploy to AWS
  inputs:
    awsCredentials: 'AWS Connection 2'
    regionName: 'us-east-1'
    applicationName: 'AppTesteItau2'
    environmentName: 'AmbienteTesteItau2'
    applicationType: 'aspnet'
    webDeploymentArchive: '$(build.artifactstagingdirectory)\WebApp.zip'